# Environment variables that can be overridden with docker compose -e:
#
# ZENTITY_VERSION=1.8.3
# ELASTIC_VERSION=8.13.3
# ELASTICSEARCH_PORT=9200
# KIBANA_PORT=5601

services:

  elasticsearch:
    image: zentity/zentity-sandbox:latest
    ports:
      - ${ELASTICSEARCH_PORT:-9200}:9200
    user: elasticsearch
    environment:
      bootstrap.memory_lock: true
      cluster.name: zentity-sandbox
      cluster.initial_master_nodes: elasticsearch
      node.name: elasticsearch
      xpack.license.self_generated.type: basic
      xpack.security.enabled: false
      reindex.remote.whitelist: host.docker.internal:9800
    mem_limit: 1gb
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: [ "CMD-SHELL", "curl -fs http://127.0.0.1:9200" ]
      interval: 2s
      timeout: 10s
      retries: 120

  kibana:
    depends_on:
      elasticsearch:
        condition: service_healthy
    command: >
      bash -c '
        sed -i -e "s/elasticsearch\.hosts:.*/elasticsearch.hosts:\n - http:\/\/elasticsearch:9200/g" /opt/kibana/config/kibana.yml
        echo "" >> /opt/kibana/config/kibana.yml
        echo "server.defaultRoute: /app/dev_tools#/console?load_from=https://raw.githubusercontent.com/zentity-io/zentity-sandbox/main/demo/zentity_api_demo.json" >> /opt/kibana/config/kibana.yml
        echo "server.name: kibana" >> /opt/kibana/config/kibana.yml
        echo "telemetry.optIn: false" >> /opt/kibana/config/kibana.yml
        kibana
      '
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION:-8.13.3}
    ports:
      - ${KIBANA_PORT:-5601}:5601
    mem_limit: 1gb
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://127.0.0.1:5601 | grep -q 'HTTP/1.1 302 Found'"
        ]
      interval: 2s
      timeout: 10s
      retries: 120
